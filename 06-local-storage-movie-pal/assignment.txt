STEP 1: Create a functioning search page
    - Register for an API key
    - Tour of the Movie Database
    - We'll give them parameters & endpoint
    - We'll help them with construcing an image URL for the poster

NOW WE WANT TO BE ABLE TO SAVE FAVORITES AND DISPLAY THEM
So, we need a way to:
    - Get the data from the search result that was clicked
    - Store it somewhere
    - Load it when we switch pages (page refresh kills our variables)

STEP 2: On click, print out the data associated with the movie
    - Click handler
        - On wrapper 
        - Checks event.target
        - Tell them how to use className & classList
        - (Give them the code for switching the from heart icon to checked icon)
    - We'll want to access the search results in another function, so they need to be global
    - When we click, how will we know which result it corresponds to? Add a data attribute for index. 

STEP 3: Storing the favorites
    - We have the search result, but we need somewhere to put it.  We need to be able to be able to access it from another page...
    - StorableData constructor
        + Array methods: getLength, get, delete, add
            * WE DON'T WANT TO MODIFY THE ARRAY DIRECTLY.  WHENEVER IT IS MODIFIED, THE OBJECT SHOULD SAVE ITSELF.
        + Local storage methods: load, save, clear
    - Build the constructor & add & save & load functions
        + Test it outside of the project?
    - Create a favoriteMovies object at start of search
    - Add to favoriteMovies in event handler
    - Verify by printing out favoriteMovies in console

STEP 4: Create a favorites page
    - Load favoriteMovies (this pulls from local storage)
    - Render favorites

STEP 5: Create a delete feature
    - Go back and add delete function to StorableData?
    - Store index on movies
    - Event handling on delete page
    - Re-render favorites
